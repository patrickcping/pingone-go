/*
PingOne Platform API - Management

A bare-bones collection for the PingOne API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
)

// BillOfMaterials struct for BillOfMaterials
type BillOfMaterials struct {
	// The time the resource was created.
	CreatedAt *string `json:"createdAt,omitempty"`
	// The time the resource was last updated.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// An array that specifies the products associated with this bill of materials
	Products []BillOfMaterialsProductsInner `json:"products,omitempty"`
}

// NewBillOfMaterials instantiates a new BillOfMaterials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillOfMaterials() *BillOfMaterials {
	this := BillOfMaterials{}
	return &this
}

// NewBillOfMaterialsWithDefaults instantiates a new BillOfMaterials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillOfMaterialsWithDefaults() *BillOfMaterials {
	this := BillOfMaterials{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BillOfMaterials) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillOfMaterials) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BillOfMaterials) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *BillOfMaterials) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *BillOfMaterials) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillOfMaterials) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BillOfMaterials) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *BillOfMaterials) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *BillOfMaterials) GetProducts() []BillOfMaterialsProductsInner {
	if o == nil || o.Products == nil {
		var ret []BillOfMaterialsProductsInner
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillOfMaterials) GetProductsOk() ([]BillOfMaterialsProductsInner, bool) {
	if o == nil || o.Products == nil {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *BillOfMaterials) HasProducts() bool {
	if o != nil && o.Products != nil {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []BillOfMaterialsProductsInner and assigns it to the Products field.
func (o *BillOfMaterials) SetProducts(v []BillOfMaterialsProductsInner) {
	o.Products = v
}

func (o BillOfMaterials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Products != nil {
		toSerialize["products"] = o.Products
	}
	return json.Marshal(toSerialize)
}

type NullableBillOfMaterials struct {
	value *BillOfMaterials
	isSet bool
}

func (v NullableBillOfMaterials) Get() *BillOfMaterials {
	return v.value
}

func (v *NullableBillOfMaterials) Set(val *BillOfMaterials) {
	v.value = val
	v.isSet = true
}

func (v NullableBillOfMaterials) IsSet() bool {
	return v.isSet
}

func (v *NullableBillOfMaterials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillOfMaterials(val *BillOfMaterials) *NullableBillOfMaterials {
	return &NullableBillOfMaterials{value: val, isSet: true}
}

func (v NullableBillOfMaterials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillOfMaterials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


