/*
PingOne Platform API - Management

A bare-bones collection for the PingOne API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
)

// ApplicationMobile struct for ApplicationMobile
type ApplicationMobile struct {
	// A string that specifies the bundle associated with the application, for push notifications in native apps. The value of the bundleId property is unique per environment, and once defined, is immutable.
	BundleId *string `json:"bundleId,omitempty"`
	// A string that specifies the package name associated with the application, for push notifications in native apps. The value of the mobile.packageName property is unique per environment, and once defined, is immutable.
	PackageName *string `json:"packageName,omitempty"`
	IntegrityDetection *ApplicationMobileIntegrityDetection `json:"integrityDetection,omitempty"`
}

// NewApplicationMobile instantiates a new ApplicationMobile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationMobile() *ApplicationMobile {
	this := ApplicationMobile{}
	return &this
}

// NewApplicationMobileWithDefaults instantiates a new ApplicationMobile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationMobileWithDefaults() *ApplicationMobile {
	this := ApplicationMobile{}
	return &this
}

// GetBundleId returns the BundleId field value if set, zero value otherwise.
func (o *ApplicationMobile) GetBundleId() string {
	if o == nil || o.BundleId == nil {
		var ret string
		return ret
	}
	return *o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationMobile) GetBundleIdOk() (*string, bool) {
	if o == nil || o.BundleId == nil {
		return nil, false
	}
	return o.BundleId, true
}

// HasBundleId returns a boolean if a field has been set.
func (o *ApplicationMobile) HasBundleId() bool {
	if o != nil && o.BundleId != nil {
		return true
	}

	return false
}

// SetBundleId gets a reference to the given string and assigns it to the BundleId field.
func (o *ApplicationMobile) SetBundleId(v string) {
	o.BundleId = &v
}

// GetPackageName returns the PackageName field value if set, zero value otherwise.
func (o *ApplicationMobile) GetPackageName() string {
	if o == nil || o.PackageName == nil {
		var ret string
		return ret
	}
	return *o.PackageName
}

// GetPackageNameOk returns a tuple with the PackageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationMobile) GetPackageNameOk() (*string, bool) {
	if o == nil || o.PackageName == nil {
		return nil, false
	}
	return o.PackageName, true
}

// HasPackageName returns a boolean if a field has been set.
func (o *ApplicationMobile) HasPackageName() bool {
	if o != nil && o.PackageName != nil {
		return true
	}

	return false
}

// SetPackageName gets a reference to the given string and assigns it to the PackageName field.
func (o *ApplicationMobile) SetPackageName(v string) {
	o.PackageName = &v
}

// GetIntegrityDetection returns the IntegrityDetection field value if set, zero value otherwise.
func (o *ApplicationMobile) GetIntegrityDetection() ApplicationMobileIntegrityDetection {
	if o == nil || o.IntegrityDetection == nil {
		var ret ApplicationMobileIntegrityDetection
		return ret
	}
	return *o.IntegrityDetection
}

// GetIntegrityDetectionOk returns a tuple with the IntegrityDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationMobile) GetIntegrityDetectionOk() (*ApplicationMobileIntegrityDetection, bool) {
	if o == nil || o.IntegrityDetection == nil {
		return nil, false
	}
	return o.IntegrityDetection, true
}

// HasIntegrityDetection returns a boolean if a field has been set.
func (o *ApplicationMobile) HasIntegrityDetection() bool {
	if o != nil && o.IntegrityDetection != nil {
		return true
	}

	return false
}

// SetIntegrityDetection gets a reference to the given ApplicationMobileIntegrityDetection and assigns it to the IntegrityDetection field.
func (o *ApplicationMobile) SetIntegrityDetection(v ApplicationMobileIntegrityDetection) {
	o.IntegrityDetection = &v
}

func (o ApplicationMobile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BundleId != nil {
		toSerialize["bundleId"] = o.BundleId
	}
	if o.PackageName != nil {
		toSerialize["packageName"] = o.PackageName
	}
	if o.IntegrityDetection != nil {
		toSerialize["integrityDetection"] = o.IntegrityDetection
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationMobile struct {
	value *ApplicationMobile
	isSet bool
}

func (v NullableApplicationMobile) Get() *ApplicationMobile {
	return v.value
}

func (v *NullableApplicationMobile) Set(val *ApplicationMobile) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationMobile) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationMobile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationMobile(val *ApplicationMobile) *NullableApplicationMobile {
	return &NullableApplicationMobile{value: val, isSet: true}
}

func (v NullableApplicationMobile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationMobile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


