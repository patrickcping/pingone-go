/*
PingOne Platform API - Management

A bare-bones collection for the PingOne API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
)

// ApplicationMobileIntegrityDetection struct for ApplicationMobileIntegrityDetection
type ApplicationMobileIntegrityDetection struct {
	// A string that specifies whether device integrity detection takes place on mobile devices, for the application's enrollment and authentication events ENABLED, DISABLED
	Mode *string `json:"mode,omitempty"`
	CacheDuration *ApplicationMobileIntegrityDetectionCacheDuration `json:"cacheDuration,omitempty"`
}

// NewApplicationMobileIntegrityDetection instantiates a new ApplicationMobileIntegrityDetection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationMobileIntegrityDetection() *ApplicationMobileIntegrityDetection {
	this := ApplicationMobileIntegrityDetection{}
	return &this
}

// NewApplicationMobileIntegrityDetectionWithDefaults instantiates a new ApplicationMobileIntegrityDetection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationMobileIntegrityDetectionWithDefaults() *ApplicationMobileIntegrityDetection {
	this := ApplicationMobileIntegrityDetection{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *ApplicationMobileIntegrityDetection) GetMode() string {
	if o == nil || o.Mode == nil {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationMobileIntegrityDetection) GetModeOk() (*string, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *ApplicationMobileIntegrityDetection) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *ApplicationMobileIntegrityDetection) SetMode(v string) {
	o.Mode = &v
}

// GetCacheDuration returns the CacheDuration field value if set, zero value otherwise.
func (o *ApplicationMobileIntegrityDetection) GetCacheDuration() ApplicationMobileIntegrityDetectionCacheDuration {
	if o == nil || o.CacheDuration == nil {
		var ret ApplicationMobileIntegrityDetectionCacheDuration
		return ret
	}
	return *o.CacheDuration
}

// GetCacheDurationOk returns a tuple with the CacheDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationMobileIntegrityDetection) GetCacheDurationOk() (*ApplicationMobileIntegrityDetectionCacheDuration, bool) {
	if o == nil || o.CacheDuration == nil {
		return nil, false
	}
	return o.CacheDuration, true
}

// HasCacheDuration returns a boolean if a field has been set.
func (o *ApplicationMobileIntegrityDetection) HasCacheDuration() bool {
	if o != nil && o.CacheDuration != nil {
		return true
	}

	return false
}

// SetCacheDuration gets a reference to the given ApplicationMobileIntegrityDetectionCacheDuration and assigns it to the CacheDuration field.
func (o *ApplicationMobileIntegrityDetection) SetCacheDuration(v ApplicationMobileIntegrityDetectionCacheDuration) {
	o.CacheDuration = &v
}

func (o ApplicationMobileIntegrityDetection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.CacheDuration != nil {
		toSerialize["cacheDuration"] = o.CacheDuration
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationMobileIntegrityDetection struct {
	value *ApplicationMobileIntegrityDetection
	isSet bool
}

func (v NullableApplicationMobileIntegrityDetection) Get() *ApplicationMobileIntegrityDetection {
	return v.value
}

func (v *NullableApplicationMobileIntegrityDetection) Set(val *ApplicationMobileIntegrityDetection) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationMobileIntegrityDetection) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationMobileIntegrityDetection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationMobileIntegrityDetection(val *ApplicationMobileIntegrityDetection) *NullableApplicationMobileIntegrityDetection {
	return &NullableApplicationMobileIntegrityDetection{value: val, isSet: true}
}

func (v NullableApplicationMobileIntegrityDetection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationMobileIntegrityDetection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


