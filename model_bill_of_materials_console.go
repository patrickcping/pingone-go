/*
PingOne Platform API - Management

A bare-bones collection for the PingOne API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
)

// BillOfMaterialsConsole struct for BillOfMaterialsConsole
type BillOfMaterialsConsole struct {
	// Primary console link for certain products
	Href string `json:"href"`
}

// NewBillOfMaterialsConsole instantiates a new BillOfMaterialsConsole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillOfMaterialsConsole(href string) *BillOfMaterialsConsole {
	this := BillOfMaterialsConsole{}
	this.Href = href
	return &this
}

// NewBillOfMaterialsConsoleWithDefaults instantiates a new BillOfMaterialsConsole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillOfMaterialsConsoleWithDefaults() *BillOfMaterialsConsole {
	this := BillOfMaterialsConsole{}
	return &this
}

// GetHref returns the Href field value
func (o *BillOfMaterialsConsole) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *BillOfMaterialsConsole) GetHrefOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *BillOfMaterialsConsole) SetHref(v string) {
	o.Href = v
}

func (o BillOfMaterialsConsole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["href"] = o.Href
	}
	return json.Marshal(toSerialize)
}

type NullableBillOfMaterialsConsole struct {
	value *BillOfMaterialsConsole
	isSet bool
}

func (v NullableBillOfMaterialsConsole) Get() *BillOfMaterialsConsole {
	return v.value
}

func (v *NullableBillOfMaterialsConsole) Set(val *BillOfMaterialsConsole) {
	v.value = val
	v.isSet = true
}

func (v NullableBillOfMaterialsConsole) IsSet() bool {
	return v.isSet
}

func (v *NullableBillOfMaterialsConsole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillOfMaterialsConsole(val *BillOfMaterialsConsole) *NullableBillOfMaterialsConsole {
	return &NullableBillOfMaterialsConsole{value: val, isSet: true}
}

func (v NullableBillOfMaterialsConsole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillOfMaterialsConsole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


