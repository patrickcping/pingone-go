/*
PingOne Platform API - Management

A bare-bones collection for the PingOne API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
)

// ApplicationMobileIntegrityDetectionCacheDuration struct for ApplicationMobileIntegrityDetectionCacheDuration
type ApplicationMobileIntegrityDetectionCacheDuration struct {
	// An integer that specifies the number of minutes or hours that specify the duration between successful integrity detection calls. Every attestation request entails a certain time tradeoff. You can choose to cache successful integrity detection calls for a predefined duration, between a minimum of 1 minute and a maximum of 48 hours. If mobile.integrityDetection.mode is ENABLED, the cache duration must be set.
	Amount *int32 `json:"amount,omitempty"`
	// A string that specifies the time units of the mobile.integrityDetection.cacheDuration.amount :MINUTES, HOURS
	Units *string `json:"units,omitempty"`
}

// NewApplicationMobileIntegrityDetectionCacheDuration instantiates a new ApplicationMobileIntegrityDetectionCacheDuration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationMobileIntegrityDetectionCacheDuration() *ApplicationMobileIntegrityDetectionCacheDuration {
	this := ApplicationMobileIntegrityDetectionCacheDuration{}
	return &this
}

// NewApplicationMobileIntegrityDetectionCacheDurationWithDefaults instantiates a new ApplicationMobileIntegrityDetectionCacheDuration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationMobileIntegrityDetectionCacheDurationWithDefaults() *ApplicationMobileIntegrityDetectionCacheDuration {
	this := ApplicationMobileIntegrityDetectionCacheDuration{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ApplicationMobileIntegrityDetectionCacheDuration) GetAmount() int32 {
	if o == nil || o.Amount == nil {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationMobileIntegrityDetectionCacheDuration) GetAmountOk() (*int32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ApplicationMobileIntegrityDetectionCacheDuration) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *ApplicationMobileIntegrityDetectionCacheDuration) SetAmount(v int32) {
	o.Amount = &v
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *ApplicationMobileIntegrityDetectionCacheDuration) GetUnits() string {
	if o == nil || o.Units == nil {
		var ret string
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationMobileIntegrityDetectionCacheDuration) GetUnitsOk() (*string, bool) {
	if o == nil || o.Units == nil {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *ApplicationMobileIntegrityDetectionCacheDuration) HasUnits() bool {
	if o != nil && o.Units != nil {
		return true
	}

	return false
}

// SetUnits gets a reference to the given string and assigns it to the Units field.
func (o *ApplicationMobileIntegrityDetectionCacheDuration) SetUnits(v string) {
	o.Units = &v
}

func (o ApplicationMobileIntegrityDetectionCacheDuration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Units != nil {
		toSerialize["units"] = o.Units
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationMobileIntegrityDetectionCacheDuration struct {
	value *ApplicationMobileIntegrityDetectionCacheDuration
	isSet bool
}

func (v NullableApplicationMobileIntegrityDetectionCacheDuration) Get() *ApplicationMobileIntegrityDetectionCacheDuration {
	return v.value
}

func (v *NullableApplicationMobileIntegrityDetectionCacheDuration) Set(val *ApplicationMobileIntegrityDetectionCacheDuration) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationMobileIntegrityDetectionCacheDuration) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationMobileIntegrityDetectionCacheDuration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationMobileIntegrityDetectionCacheDuration(val *ApplicationMobileIntegrityDetectionCacheDuration) *NullableApplicationMobileIntegrityDetectionCacheDuration {
	return &NullableApplicationMobileIntegrityDetectionCacheDuration{value: val, isSet: true}
}

func (v NullableApplicationMobileIntegrityDetectionCacheDuration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationMobileIntegrityDetectionCacheDuration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


