/*
PingOne Platform API - Management

A bare-bones collection for the PingOne API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
)

// RiskPolicySetConditionAggregatedWeights struct for RiskPolicySetConditionAggregatedWeights
type RiskPolicySetConditionAggregatedWeights struct {
	Value *string `json:"value,omitempty"`
	Weight *int32 `json:"weight,omitempty"`
}

// NewRiskPolicySetConditionAggregatedWeights instantiates a new RiskPolicySetConditionAggregatedWeights object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPolicySetConditionAggregatedWeights() *RiskPolicySetConditionAggregatedWeights {
	this := RiskPolicySetConditionAggregatedWeights{}
	return &this
}

// NewRiskPolicySetConditionAggregatedWeightsWithDefaults instantiates a new RiskPolicySetConditionAggregatedWeights object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPolicySetConditionAggregatedWeightsWithDefaults() *RiskPolicySetConditionAggregatedWeights {
	this := RiskPolicySetConditionAggregatedWeights{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RiskPolicySetConditionAggregatedWeights) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPolicySetConditionAggregatedWeights) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RiskPolicySetConditionAggregatedWeights) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *RiskPolicySetConditionAggregatedWeights) SetValue(v string) {
	o.Value = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *RiskPolicySetConditionAggregatedWeights) GetWeight() int32 {
	if o == nil || o.Weight == nil {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPolicySetConditionAggregatedWeights) GetWeightOk() (*int32, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *RiskPolicySetConditionAggregatedWeights) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *RiskPolicySetConditionAggregatedWeights) SetWeight(v int32) {
	o.Weight = &v
}

func (o RiskPolicySetConditionAggregatedWeights) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	return json.Marshal(toSerialize)
}

type NullableRiskPolicySetConditionAggregatedWeights struct {
	value *RiskPolicySetConditionAggregatedWeights
	isSet bool
}

func (v NullableRiskPolicySetConditionAggregatedWeights) Get() *RiskPolicySetConditionAggregatedWeights {
	return v.value
}

func (v *NullableRiskPolicySetConditionAggregatedWeights) Set(val *RiskPolicySetConditionAggregatedWeights) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPolicySetConditionAggregatedWeights) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPolicySetConditionAggregatedWeights) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPolicySetConditionAggregatedWeights(val *RiskPolicySetConditionAggregatedWeights) *NullableRiskPolicySetConditionAggregatedWeights {
	return &NullableRiskPolicySetConditionAggregatedWeights{value: val, isSet: true}
}

func (v NullableRiskPolicySetConditionAggregatedWeights) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPolicySetConditionAggregatedWeights) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


