/*
PingOne Platform API - SSO and Base

The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"
)

// P1ErrorDetailsInnerInnerError struct for P1ErrorDetailsInnerInnerError
type P1ErrorDetailsInnerInnerError struct {
	AllowedValues []string `json:"allowedValues,omitempty"`
}

// NewP1ErrorDetailsInnerInnerError instantiates a new P1ErrorDetailsInnerInnerError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewP1ErrorDetailsInnerInnerError() *P1ErrorDetailsInnerInnerError {
	this := P1ErrorDetailsInnerInnerError{}
	return &this
}

// NewP1ErrorDetailsInnerInnerErrorWithDefaults instantiates a new P1ErrorDetailsInnerInnerError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewP1ErrorDetailsInnerInnerErrorWithDefaults() *P1ErrorDetailsInnerInnerError {
	this := P1ErrorDetailsInnerInnerError{}
	return &this
}

// GetAllowedValues returns the AllowedValues field value if set, zero value otherwise.
func (o *P1ErrorDetailsInnerInnerError) GetAllowedValues() []string {
	if o == nil || o.AllowedValues == nil {
		var ret []string
		return ret
	}
	return o.AllowedValues
}

// GetAllowedValuesOk returns a tuple with the AllowedValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *P1ErrorDetailsInnerInnerError) GetAllowedValuesOk() ([]string, bool) {
	if o == nil || o.AllowedValues == nil {
		return nil, false
	}
	return o.AllowedValues, true
}

// HasAllowedValues returns a boolean if a field has been set.
func (o *P1ErrorDetailsInnerInnerError) HasAllowedValues() bool {
	if o != nil && o.AllowedValues != nil {
		return true
	}

	return false
}

// SetAllowedValues gets a reference to the given []string and assigns it to the AllowedValues field.
func (o *P1ErrorDetailsInnerInnerError) SetAllowedValues(v []string) {
	o.AllowedValues = v
}

func (o P1ErrorDetailsInnerInnerError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedValues != nil {
		toSerialize["allowedValues"] = o.AllowedValues
	}
	return json.Marshal(toSerialize)
}

type NullableP1ErrorDetailsInnerInnerError struct {
	value *P1ErrorDetailsInnerInnerError
	isSet bool
}

func (v NullableP1ErrorDetailsInnerInnerError) Get() *P1ErrorDetailsInnerInnerError {
	return v.value
}

func (v *NullableP1ErrorDetailsInnerInnerError) Set(val *P1ErrorDetailsInnerInnerError) {
	v.value = val
	v.isSet = true
}

func (v NullableP1ErrorDetailsInnerInnerError) IsSet() bool {
	return v.isSet
}

func (v *NullableP1ErrorDetailsInnerInnerError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableP1ErrorDetailsInnerInnerError(val *P1ErrorDetailsInnerInnerError) *NullableP1ErrorDetailsInnerInnerError {
	return &NullableP1ErrorDetailsInnerInnerError{value: val, isSet: true}
}

func (v NullableP1ErrorDetailsInnerInnerError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableP1ErrorDetailsInnerInnerError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


