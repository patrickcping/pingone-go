/*
PingOne Platform API - Management

A bare-bones collection for the PingOne API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
)

// RiskPolicyResult struct for RiskPolicyResult
type RiskPolicyResult struct {
	Level *string `json:"level,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewRiskPolicyResult instantiates a new RiskPolicyResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRiskPolicyResult() *RiskPolicyResult {
	this := RiskPolicyResult{}
	return &this
}

// NewRiskPolicyResultWithDefaults instantiates a new RiskPolicyResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRiskPolicyResultWithDefaults() *RiskPolicyResult {
	this := RiskPolicyResult{}
	return &this
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *RiskPolicyResult) GetLevel() string {
	if o == nil || o.Level == nil {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPolicyResult) GetLevelOk() (*string, bool) {
	if o == nil || o.Level == nil {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *RiskPolicyResult) HasLevel() bool {
	if o != nil && o.Level != nil {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *RiskPolicyResult) SetLevel(v string) {
	o.Level = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RiskPolicyResult) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RiskPolicyResult) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RiskPolicyResult) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RiskPolicyResult) SetType(v string) {
	o.Type = &v
}

func (o RiskPolicyResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Level != nil {
		toSerialize["level"] = o.Level
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableRiskPolicyResult struct {
	value *RiskPolicyResult
	isSet bool
}

func (v NullableRiskPolicyResult) Get() *RiskPolicyResult {
	return v.value
}

func (v *NullableRiskPolicyResult) Set(val *RiskPolicyResult) {
	v.value = val
	v.isSet = true
}

func (v NullableRiskPolicyResult) IsSet() bool {
	return v.isSet
}

func (v *NullableRiskPolicyResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRiskPolicyResult(val *RiskPolicyResult) *NullableRiskPolicyResult {
	return &NullableRiskPolicyResult{value: val, isSet: true}
}

func (v NullableRiskPolicyResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRiskPolicyResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


